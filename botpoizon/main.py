from pyrogram import Client, filters
from pyrogram.handlers import CallbackQueryHandler, MessageHandler
from pyrogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery, ReplyKeyboardMarkup, KeyboardButton
from pyrogram_patch import patch
from pyrogram_patch.fsm.storages import MemoryStorage
from pyrogram_patch.fsm import StatesGroup, StateItem
from pyrogram_patch.fsm import State
from pyrogram_patch.fsm.filter import StateFilter

_api_id = '8'
_api_hash = '7245de8e747a0d6fbe11f7cc14fcc0bb'
_bot_token = '6205149164:AAG263ZgqOvOdU0vrcGaEDy3isK3kuvFzus'
faq_words = {
    'faq1': '‚ùóÔ∏è –î–ª—è –æ–ø–ª–∞—Ç—ã –∑–∞–∫–∞–∑–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É, –Ω–æ–º–µ—Ä –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤–∞–º –ø–æ—Å–ª–µ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞. –ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –≤—ã –ø—Ä–æ–∏–∑–≤–µ–¥–µ—Ç–µ –æ–ø–ª–∞—Ç—É, –º—ã —Å–æ–≤–µ—Ä—à–∞–µ–º –≤—ã–∫—É–ø –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –≤–∞–º–∏ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ Poizon –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∞–º –∫–≤–∏—Ç–∞–Ω—Ü–∏—é –æ–± –æ–ø–ª–∞—Ç–µ.',
    'faq2': '‚ùóÔ∏è –ß—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ –Ω–∞ Poizon, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–º–Ω–æ–∂–∏—Ç—å —É–∫–∞–∑–∞–Ω–Ω—É—é —Ü–µ–Ω—É –≤ —é–∞–Ω—è—Ö –Ω–∞ 12.'
            ' –ö —ç—Ç–æ–π —Ü–µ–Ω–µ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ —Ç–æ–≤–∞—Ä–∞ —Å–æ —Å–∫–ª–∞–¥–∞ Poizon –≤ –ú–æ—Å–∫–≤–µ –Ω–∞ –Ω–∞—à —Å–∫–ª–∞–¥ –∏ –Ω–∞—à–∞ –∫–æ–º–∏—Å—Å–∏—è, –∫–æ—Ç–æ—Ä–∞—è —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 1500 —Ä—É–±–ª–µ–π –∑–∞ –æ–¥–Ω—É –µ–¥–∏–Ω–∏—Ü—É —Ç–æ–≤–∞—Ä–∞. –ß—Ç–æ–±—ã –¥–æ—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –∏–∑ –ú–æ—Å–∫–≤—ã –≤ –≤–∞—à –≥–æ—Ä–æ–¥, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —É—Å–ª—É–≥–∞–º–∏ –°–î–≠–ö, –ë–æ–∫—Å–±–µ—Ä—Ä–∏ –∏–ª–∏ –ü–æ—á—Ç–æ–π –†–æ—Å—Å–∏–∏. –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è –≤–∞–º–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞ –≤ –ü–í–ó –°–î–≠–ö, –ë–æ–∫—Å–±–µ—Ä—Ä–∏ –∏–ª–∏ –≤ –ü–æ—á—Ç–µ –†–æ—Å—Å–∏–∏.',
    'faq3': '‚ùóÔ∏è –ù–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞, –º—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º —Å–∞–º—ã–µ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –≤ –†–æ—Å—Å–∏–∏ - –Ω–∞—à–∞ –∫–æ–º–∏—Å—Å–∏—è –∑–∞ –∫–∞–∂–¥—É—é –µ–¥–∏–Ω–∏—Ü—É —Ç–æ–≤–∞—Ä–∞ –≤ –∑–∞–∫–∞–∑–µ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –≤—Å–µ–≥–æ 1500 —Ä—É–±–ª–µ–π. –ë–æ–ª–µ–µ —Ç–æ–≥–æ, –º—ã —è–≤–ª—è–µ–º—Å—è –∫—Ä—É–ø–Ω—ã–º —Ä–æ—Å—Å–∏–π—Å–∫–∏–º –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–æ–º, —á—Ç–æ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —Å–æ–≤–µ—Ä—à–∞–µ–º—ã—Ö —Å–¥–µ–ª–æ–∫.',
    'faq4': '‚ùóÔ∏è –ú—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–æ–≤–∞—Ä, –ø–æ—Å–∫–æ–ª—å–∫—É Poizon —Ç—â–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç—å –≤—Å–µ—Ö –≤–µ—â–µ–π –≤ —Å–≤–æ–µ–π –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏. –î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è 9 —É—Ä–æ–≤–Ω–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏, –∫–æ–Ω—Ç—Ä–æ–ª—è –∏ –¥–æ—Å–º–æ—Ç—Ä–∞, —á—Ç–æ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –ø–æ–ª–Ω—É—é –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç—å –ø—Ä–æ–¥—É–∫—Ç–∞. –ú—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ —É –≤–∞—Å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–º —Ç–æ–≤–∞—Ä–∞–º, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –Ω–∞ —Ä–æ—Å—Å–∏–π—Å–∫–æ–º —Ä—ã–Ω–∫–µ.',
    'faq5': '‚ùóÔ∏è –ö–æ–º–∞–Ω–¥–∞ Poizon Family –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤–æ–∑–≤—Ä–∞—Ç —Ç–æ–≤–∞—Ä–∞, –Ω–æ –º—ã –º–æ–∂–µ–º –ë–ï–°–ü–õ–ê–¢–ù–û –æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å –ø–æ –ø—Ä–æ–¥–∞–∂–µ –≤–∞—à–µ–π –≤–µ—â–∏. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–∞—Ö, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.',
}


client = Client("Poizonfamily_ROBOT",
                api_id=_api_id,
                api_hash=_api_hash,
                bot_token=_bot_token)

patch_manager = patch(client)

patch_manager.set_storage(MemoryStorage())

class ForCalculator(StatesGroup):
    price = StateItem()
    start = StateItem()

class For_user():
    user_name = None

@client.on_message(filters.command(commands=['start']) & filters.private)
async def welcome(client, message):
    await message.reply(text='–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å –Ω–∞ —Å–µ—Ä–≤–∏—Å–µ –¥–æ—Å—Ç–∞–≤–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ Poizon Family! '
                        '–ú—ã —Ä–∞–¥—ã –ø–æ–º–æ—á—å –≤–∞–º –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ–∏ –ø–æ–∫—É–ø–∫–∏ –±—ã—Å—Ç—Ä–æ –∏ —É–¥–æ–±–Ω–æ. –ñ–µ–ª–∞–µ–º –ø—Ä–∏—è—Ç–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫!', reply_markup=reply_keyboard)
    await message.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup=inline_keyboard)

    For_user.user_name = message.from_user.username


@client.on_message(filters.private & StateFilter())
async def home(client: Client,  message):
    if message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        await welcome(client, message)
        return


@client.on_message(filters.private & StateFilter())
def valid_home(client: Client, message):
    if message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        return True


reply_keyboard = ReplyKeyboardMarkup(keyboard=[
    [
        KeyboardButton(
            text='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'
        )
    ]
], resize_keyboard=True)


example_keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(
            text='–ì–¥–µ –Ω–∞–π—Ç–∏ —Å—Å—ã–ª–∫—É?',
            callback_data='example_photo'
        )
    ]
    ])

inline_keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(
            text='üí∏ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ü–µ–Ω—ã',
            callback_data='total'
        )
    ],
    [
        InlineKeyboardButton(
            text='üöõ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑',
            callback_data='order'
        )
    ],
    [
        InlineKeyboardButton(
            text='‚ÅâÔ∏èFAQ',
            callback_data='faq_add_buttons'
        )
    ],
    [
        InlineKeyboardButton(
            text='üìÜ –°—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏',
            callback_data='text_time'
        )
    ],
    [
        InlineKeyboardButton(
            text='üîî –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º',
            callback_data='admins_add_buttons'
        )
    ],
    [
        InlineKeyboardButton(
            text='üìå –û—Ç–∑—ã–≤—ã',
            callback_data='review_add_buttons',
        )
    ],
])

keyboard_review = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(
            text='‚úàÔ∏è –¢–µ–ª–µ–≥—Ä–∞–º–º',
            url='https://t.me/+-88ObMD-rLg2MjMy'
        )
    ],
    [
        InlineKeyboardButton(
            text='üåê –í–ö–æ–Ω—Ç–∞–∫—Ç–µ',
            url='https://vk.com/topic-219469694_49081656'
        )
    ],
])

keyboard_admins = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(
            text='1Ô∏è‚É£ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
            url='https://t.me/sellpeace'
        )
    ],
    [
        InlineKeyboardButton(
            text='2Ô∏è‚É£ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
            url='https://t.me/ryzzzh'
        )
    ],
])

keyboard_faq = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(
            text='‚ùî –ö–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ–ø–ª–∞—Ç–∞? üí≥',
            callback_data='faq1'
        )
    ],
    [
        InlineKeyboardButton(
            text='‚ùî –ò–∑ —á–µ–≥–æ —Å–∫–ª–∞–¥—ã–≤–∞–µ—Ç—Å—è —Ü–µ–Ω–∞? üí∞üí±',
            callback_data='faq2'
        )
    ],
    [
        InlineKeyboardButton(
            text='‚ùî –°–∫–æ–ª—å–∫–æ —Å—Ç–æ—è—Ç –≤–∞—à–∏ —É—Å–ª—É–≥–∏? üöõ',
            callback_data='faq3'
        )
    ],
    [
        InlineKeyboardButton(
            text='‚ùî –ß—Ç–æ, –µ—Å–ª–∏ –ø—Ä–∏–µ–¥–µ—Ç –Ω–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–æ–≤–∞—Ä? ‚õîÔ∏è',
            callback_data='faq4'
        )
    ],
    [
        InlineKeyboardButton(
            text='‚ùî –ö–∞–∫ –≤–µ—Ä–Ω—É—Ç—å –¥–µ–Ω—å–≥–∏, –µ—Å–ª–∏ —Ç–æ–≤–∞—Ä –Ω–µ –ø–æ–¥–æ—à–µ–ª? ‚Ü©Ô∏è',
            callback_data='faq5'
        )
    ],
])


def call_data(data):
    async def filter_data(self, __, call: CallbackQuery):
        return self.data == call.data

    return filters.create(filter_data, data=data)


async def button_home(_, message: Message):
    await message.reply('ff')

async def review_add_button(client: Client, call: CallbackQuery):
    await client.answer_callback_query(call.id)
    await call.message.reply('–û—Ç–∑—ã–≤—ã üëáüèª', reply_markup=keyboard_review)


async def command_basic(client: Client, call: CallbackQuery):
    await client.answer_callback_query(call.id)
    await call.message.reply(f'—Ç—ã –Ω–∞–∂–∞–ª –Ω–∞ {call.data}')

@client.on_message(filters.private & StateFilter())
async def command_total(client: Client, call: CallbackQuery, state: State):
    await client.answer_callback_query(call.id)
    await call.message.reply(f'–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ —é–∞–Ω—è—Ö üá®üá≥:')
    await state.set_state(ForCalculator.price)


async def faq_add_buttons(client: Client, call: CallbackQuery):
    await client.answer_callback_query(call.id)
    await call.message.reply('–°–ø–∏—Å–æ–∫ –Ω–∞–∏–±–æ–ª–µ–µ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –∏—Ö —Ä–µ—à–µ–Ω–∏—è üëáüèª', reply_markup=keyboard_faq)

@client.on_message(filters.private & StateFilter(ForCalculator.price))
async def message_for_total(client: Client, message: Message, state: State):
    while True:
        if message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
            await welcome(client, message)
            break
        try:
            if type(int(message.text)) == int:
                await state.set_state(ForCalculator.price)
                value_before = int(message.text)
                if value_before <= 1500:
                    value = value_before * 12 + 1500
                    await message.reply(f'''–ö—É—Ä—Å —é–∞–Ω—è - 12

–í–∞—à —Ä–∞—Å—á–µ—Ç –∑–∞–∫–∞–∑–∞ –±–µ–∑ —É—á–µ—Ç–∞ –¥–æ—Å—Ç–∞–≤–æ–∫: {value} —Ä—É–±
- –¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ Poizon {value_before * 12} —Ä—É–±.
- –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –ö–∏—Ç–∞—é 0 —Ä—É–±.
- –î–æ—Å—Ç–∞–≤–∫–∞ –¥–æ —Å–∫–ª–∞–¥–∞ –≤ –†–æ—Å—Å–∏–∏ 600 —Ä—É–±/–∫–≥.
- –ö–æ–º–∏—Å—Å–∏—è —Å–µ—Ä–≤–∏—Å–∞ 1500 —Ä—É–±.
- –î–æ—Å—Ç–∞–≤–∫–∞ –≤ –ü–í–ó –ø–æ –†–§ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ä–∞–∑–º–µ—Ä–∞ –ø–æ—Å—ã–ª–∫–∏ –∏ –µ–µ –≤–µ—Å–∞.
- –ü—Ä–µ–¥–æ–ø–ª–∞—Ç–∞ {value} —Ä—É–±.

–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ —Ä–∞—Å—á–µ—Ç —Å—á–∏—Ç–∞–µ—Ç—Å—è –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º –≤ —Ç–µ—á–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ —á–∞—Å–∞, –ø–æ—Å–∫–æ–ª—å–∫—É —Ü–µ–Ω—ã –Ω–∞ Poizon –∏–∑–º–µ–Ω—è—é—Ç—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –∏ —á–∞—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è. –ï—Å–ª–∏ –≤—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ —á–µ—Ä–µ–∑ —á–∞—Å –∏–ª–∏ –ø–æ–∑–∂–µ, –≤–∞–º –ø—Ä–∏–¥–µ—Ç—Å—è –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.''')
                    break
                else:
                    value = value_before * 12
                    value += value / 10
                    await message.reply(f'''–ö—É—Ä—Å —é–∞–Ω—è - 12

–í–∞—à —Ä–∞—Å—á–µ—Ç –∑–∞–∫–∞–∑–∞ –±–µ–∑ —É—á–µ—Ç–∞ –¥–æ—Å—Ç–∞–≤–æ–∫: {value} —Ä—É–±
- –¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ Poizon {value_before * 12} —Ä—É–±.
- –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –ö–∏—Ç–∞—é 0 —Ä—É–±.
- –î–æ—Å—Ç–∞–≤–∫–∞ –¥–æ —Å–∫–ª–∞–¥–∞ –≤ –†–æ—Å—Å–∏–∏ 600 —Ä—É–±/–∫–≥.
- –ö–æ–º–∏—Å—Å–∏—è —Å–µ—Ä–≤–∏—Å–∞ 10%.
- –î–æ—Å—Ç–∞–≤–∫–∞ –≤ –ü–í–ó –ø–æ –†–§ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ä–∞–∑–º–µ—Ä–∞ –ø–æ—Å—ã–ª–∫–∏ –∏ –µ–µ –≤–µ—Å–∞.
- –ü—Ä–µ–¥–æ–ø–ª–∞—Ç–∞ {value} —Ä—É–±.

–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ —Ä–∞—Å—á–µ—Ç —Å—á–∏—Ç–∞–µ—Ç—Å—è –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º –≤ —Ç–µ—á–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ —á–∞—Å–∞, –ø–æ—Å–∫–æ–ª—å–∫—É —Ü–µ–Ω—ã –Ω–∞ Poizon –∏–∑–º–µ–Ω—è—é—Ç—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –∏ —á–∞—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è. –ï—Å–ª–∏ –≤—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ —á–µ—Ä–µ–∑ —á–∞—Å –∏–ª–∏ –ø–æ–∑–∂–µ, –≤–∞–º –ø—Ä–∏–¥–µ—Ç—Å—è –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.''')
                    break
        except ValueError:
            await message.reply('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.')
            break




async def admins_add_buttons(client: Client, call: CallbackQuery):
    await client.answer_callback_query(call.id)
    await call.message.reply('–°–≤—è–∑—å üëáüèª', reply_markup=keyboard_admins)


async def output_faq(client: Client, call: CallbackQuery):
    await client.answer_callback_query(call.id)
    await call.message.reply(f'{faq_words.get(call.data)}')

async def send_photo_example(client: Client, call: CallbackQuery):
    await client.send_photo(For_user.user_name, './photo/photo_example.jpg')

async def text_info_time(client: Client, call: CallbackQuery):
    await client.answer_callback_query(call.id)
    await call.message.reply('''üì¶ –î–æ—Å—Ç–∞–≤–∫–∞ —Ç–æ–≤–∞—Ä–∞ –∑–∞–Ω–∏–º–∞–µ—Ç –æ—Ç 15 –¥–æ 25 –¥–Ω–µ–π. 

–ü–æ—á–µ–º—É —Ç–∞–∫? 
1. –û—Ç 2 –¥–æ 6 –¥–Ω–µ–π ‚Äî –¥–æ—Å—Ç–∞–≤–∫–∞ –¥–æ –Ω–∞—à–µ–≥–æ —Å–∫–ª–∞–¥–∞ –≤ –ö–∏—Ç–∞–µ. üá®üá≥
2. –û—Ç 7 –¥–æ 10 –¥–Ω–µ–π ‚Äî –¥–æ—Å—Ç–∞–≤–∫–∞ –¥–æ –Ω–∞—à–µ–≥–æ —Å–∫–ª–∞–¥–∞ –≤ –†–æ—Å—Å–∏–∏. üá∑üá∫
3. –û—Ç 3 –¥–æ 5 –¥–Ω–µ–π ‚Äî –î–æ—Å—Ç–∞–≤–∫–∞ –°–î–≠–ö, –ë–æ–∫—Å–±–µ—Ä—Ä–∏, –ü–æ—á—Ç–∞ –†–æ—Å—Å–∏–∏. –ù–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å –ø–æ—Å–ª–µ –¥–æ—Å—Ç–∞–≤–∫–∏ –Ω–∞ –Ω–∞—à —Å–∫–ª–∞–¥.'''
                       )


class Parameters(StatesGroup):
    name = StateItem()
    link = StateItem()
    picture = StateItem()
    price = StateItem()
    size = StateItem()
    city = StateItem()
    user_name = StateItem()










# filters.inline_keyboard &
@client.on_message(filters.private & StateFilter())
async def order_1(client: Client, call: CallbackQuery, state: State):
    await call.message.reply('‚ñ´Ô∏è–£–∫–∞–∂–∏—Ç–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞:')
    await state.set_state(Parameters.name)




@client.on_message(filters.private & StateFilter(Parameters.name))
async def order_2(client: Client, message, state: State):
    if valid_home(client, message):
        await home(client, message)
    else:
        await state.set_data({'name': message.text})
        await message.reply('‚ñ´Ô∏è–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä:', reply_markup=example_keyboard)
        await state.set_state(Parameters.link)


@client.on_message(filters.private & StateFilter(Parameters.link))
async def order_3(client: Client, message, state: State):
    if valid_home(client, message):
        await home(client, message)
    else:
        await state.set_data({'link': message.text})
        await client.send_message(message.chat.id, '‚ñ´Ô∏è–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ –≤ —é–∞–Ω—è—Ö:')
        await state.set_state(Parameters.price)


@client.on_message(filters.private & StateFilter(Parameters.price))
async def order_4(client: Client, message, state: State):
    if valid_home(client, message):
        await home(client, message)
    else:
        await state.set_data({'price': message.text})
        await client.send_message(message.chat.id, '‚ñ´Ô∏è–í–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä —Ç–æ–≤–∞—Ä–∞:')
        await state.set_state(Parameters.size)



@client.on_message(filters.private & StateFilter(Parameters.size))
async def order_5(client: Client, message, state: State):
    if valid_home(client, message):
        await home(client, message)
    else:
        await state.set_data({'size': message.text})
        await client.send_message(message.chat.id, '‚ñ´Ô∏è–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–æ—Å—Ç–∞–≤–∫–∏:')
        await state.set_state(Parameters.city)




@client.on_message(filters.private & StateFilter(Parameters.city))
async def order_6(client: Client, message, state: State):
    if valid_home(client, message):
        await home(client, message)
    else:
        await state.set_data({'city': message.text})
        await state.set_data({'user_name': message.from_user.username})
        state_data = await state.get_data()
        iname = state_data['name']
        link = state_data['link']
        # picture = state_data['picture']
        price = state_data['price']
        size = state_data['size']
        city = state_data['city']
        user_name = state_data['user_name']
        await client.send_message(message.chat.id, '''‚ñ´Ô∏è–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: {}
‚ñ´Ô∏è–°–∫—Ä–∏–Ω—à–æ—Ç —Ç–æ–≤–∞—Ä–∞: {}
‚ñ´Ô∏è–¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞ –≤ —é–∞–Ω—è—Ö: {}
‚ñ´Ô∏è–†–∞–∑–º–µ—Ä —Ç–æ–≤–∞—Ä–∞: {}
‚ñ´Ô∏è–ì–æ—Ä–æ–¥ –¥–æ—Å—Ç–∞–≤–∫–∏: {}
‚úÖ –í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É. –° –í–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä. –°–ø–∞—Å–∏–±–æ! '''.format(iname, link, price, size, city))
        await client.send_message(int(-1001623755264), '''‚ñ´Ô∏è–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: {}
‚ñ´Ô∏è–°–∫—Ä–∏–Ω—à–æ—Ç —Ç–æ–≤–∞—Ä–∞: {}
‚ñ´Ô∏è–¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞ –≤ —é–∞–Ω—è—Ö: {}
‚ñ´Ô∏è–†–∞–∑–º–µ—Ä —Ç–æ–≤–∞—Ä–∞: {}
‚ñ´Ô∏è–ì–æ—Ä–æ–¥ –¥–æ—Å—Ç–∞–≤–∫–∏: {}
‚úÖ –ò–º—è –∑–∞–∫–∞–∑—á–∏–∫–∞: @{}'''.format(iname, link, price, size, city, user_name))

        await state.finish()













client.add_handler(CallbackQueryHandler(order_1, call_data('order')))
client.add_handler(CallbackQueryHandler(send_photo_example, call_data('example_photo')))
client.add_handler(CallbackQueryHandler(text_info_time, call_data('text_time')))
client.add_handler(CallbackQueryHandler(output_faq, call_data('faq1')))
client.add_handler(CallbackQueryHandler(output_faq, call_data('faq2')))
client.add_handler(CallbackQueryHandler(output_faq, call_data('faq3')))
client.add_handler(CallbackQueryHandler(output_faq, call_data('faq4')))
client.add_handler(CallbackQueryHandler(output_faq, call_data('faq5')))
client.add_handler(CallbackQueryHandler(faq_add_buttons, call_data('faq_add_buttons')))
client.add_handler(CallbackQueryHandler(command_total, call_data('total')))
client.add_handler(CallbackQueryHandler(admins_add_buttons, call_data("admins_add_buttons")))
client.add_handler(CallbackQueryHandler(review_add_button, call_data("review_add_buttons")))


client.run()
